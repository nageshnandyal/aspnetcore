// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.

using Microsoft.AspNetCore.OpenApi.SourceGenerators;
using Microsoft.CodeAnalysis.CSharp.Testing;
using Microsoft.CodeAnalysis.Testing.Verifiers;

public partial class XmlCommentGeneratorTests
{
    public Dictionary<string, (string Input, string CommentCache, string Interceptors)> Sources => new()
    {
        { nameof(SmokeTest), (
            Input: """
            namespace TestNamespace;

            /// <summary>
            /// Test class.
            /// </summary>
            public class TestClass
            {
                /// <summary>
                /// Return a string representing a test property.
                /// </summary>
                public string TestProperty { get; set; }
            }
            """,
            CommentCache: """
            //------------------------------------------------------------------------------
            // <auto-generated>
            //     This code was generated by a tool.
            //
            //     Changes to this file may cause incorrect behavior and will be lost if
            //     the code is regenerated.
            // </auto-generated>
            //------------------------------------------------------------------------------

            namespace Microsoft.AspNetCore.OpenApi.Generated
            {
                using System;
                using System.Collections.Generic;
                using System.Reflection;

                file record struct XmlComment(string Summary);

                file class XmlCommentCache
                {
                    public Dictionary<(Type, string?), XmlComment> Cache = new()
                    {
                        { (typeof(global::TestNamespace.TestClass), null), new XmlComment("Test class.") }
                    };
                }
            }
            """,
            Interceptors: null)}
    };
}
